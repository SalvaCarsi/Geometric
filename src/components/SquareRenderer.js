'use strict';

import React, { Component } from 'react';

import Circle from './styled/Circle';
import ButtonsWrapper from './styled/ButtonsWrapper';
import TableWrapper from './styled/TableWrapper';

export class SquareRenderer extends Component {

  /**
   * We need an bi-dimensional array with different values because react render function needs the key property of
   * some elements to be unique
   * @param size
   */
  generateBiDimensionalArray = (size = 5) => {
    return Array.apply(null, new Array(size)).map(
      (value, index) => {
        return Array.apply(null, new Array(size)).map( (value, index) => index);
      }
    );
  };

  /**
   * Today only God and me know how this works, in a month only good will know!
   *
   * Basically it maps the two dimension array generated by generateBiDimensionalArray and it generates as many tr as
   * X dimensions are in the array, then it maps again and it generates as many td as Y dimensions are in the array.
   *
   * Inside every td printed it prints the Circle component
   * @returns {XML}
   */
  renderCircles = () => {
    return (
      <TableWrapper>
        <tbody>
          {
            this.generateBiDimensionalArray().map( (row, index) => {
              return (
                <tr key={index}>
                  {row.map( cell => {
                    return (<td key={cell}><Circle/></td>)
                  })}
                </tr>
              )
            })
          }
        </tbody>
      </TableWrapper>
    );
  };

  render = () => {
    return (
      <ButtonsWrapper>{this.renderCircles()}</ButtonsWrapper>
    );
  }

}

export default  SquareRenderer;