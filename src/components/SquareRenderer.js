'use strict';

import React, { Component } from 'react';

import Circle from './styled/Circle';
import ButtonsWrapper from './styled/ButtonsWrapper';
import TableWrapper from './styled/TableWrapper';

export class SquareRenderer extends Component {

  /**
   * Helper method to clarify the code in renderCircles
   * @param size
   * @returns {*}
   */
  generateArray = (size = 5) => {
    return Array.apply(null, new Array(size))
  };

  /**
   * Today only God and me know how this works, in a month only good will know!
   *
   * Basically it maps the two dimension array generated by generateBiDimensionalArray and it generates as many tr as
   * X dimensions are in the array, then it maps again and it generates as many td as Y dimensions are in the array.
   *
   * Inside every td printed it prints the Circle component
   * @returns {XML}
   */
  renderCircles = () => {
    return (
      <TableWrapper>
        <tbody>
        {
          this.generateArray().map( (row, indexRow) => {
            return (
              <tr key={indexRow}>
                {this.generateArray().map( (cell, indexCell) => {
                  return (<td key={indexCell}><Circle/></td>)
                })}
              </tr>
            )
          })
        }
        </tbody>
      </TableWrapper>
    );
  };

  render = () => {
    return (
      <ButtonsWrapper>{this.renderCircles()}</ButtonsWrapper>
    );
  }

}

export default  SquareRenderer;